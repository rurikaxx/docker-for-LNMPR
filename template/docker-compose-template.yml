version: "3.4"

networks:
  frontend:
# 設定backend子網路
  backend:
    ipam:
      driver: default
      config:
      -
        subnet: ${BACKEND_SUBNET}

services:

# nginx
  nginx:
      container_name: nginx
      networks:
        backend:
          ipv4_address: ${NGINX_SERVER_IP}
      image: shareba/nginx
#      build: ./nginx/
      ports:
        - "443:443"
        - "80:80"
      volumes:
        - ./nginx/ssl:/etc/ssl
        {{NGINX_VOLUMES}}
        {{PROJECT_VOLUMES}}

  php:
      container_name: php
      networks:
        backend:
          ipv4_address: ${UPLOAD_SERVER_IP}
      build: ./php-7.1/
      expose:
        - 9000
      tty: true
      volumes:
        {{PROJECT_VOLUMES}}
      extra_hosts:
        - "${HOST_PUB}:${NGINX_SERVER_IP}"

  php-7.3:
      container_name: php-7.3
      networks:
        backend:
#          ipv4_address: ${UPLOAD_SERVER_IP}
      build: ./php-7.3/
      expose:
        - 9000
      tty: true
      cap_add:
        - NET_ADMIN
      volumes:
        {{PROJECT_VOLUMES}}
      extra_hosts:
        - "${HOST_PUB}:${NGINX_SERVER_IP}"

  php-7.4:
      container_name: php-7.4
      networks:
        backend:
#          ipv4_address: ${UPLOAD_SERVER_IP}
      build: ./php-7.4/
      expose:
        - 9000
      tty: true
      volumes:
        {{PROJECT_VOLUMES}}
      extra_hosts:
        - "${HOST_PUB}:${NGINX_SERVER_IP}"

  php-8.1:
      container_name: php-8.1
      networks:
        backend:
#          ipv4_address: ${UPLOAD_SERVER_IP}
      build: ./php-8.1/
      expose:
        - 9000
      tty: true
      volumes:
        {{PROJECT_VOLUMES}}
      extra_hosts:
        - "${HOST_PUB}:${NGINX_SERVER_IP}"

  php-8.0:
      container_name: php-8.0
      networks:
        backend:
#          ipv4_address: ${UPLOAD_SERVER_IP}
      build: ./php-8.0/
      expose:
        - 9000
#        - 8282
#        - 1236
#        - 55151
#        - 2300
#      ports:
#        - "8282:8282"
#        - "1236:1236"
#        - "55151:55151"
#        - "2300:2300"
      tty: true
      volumes:
        {{PROJECT_VOLUMES}}
      extra_hosts:
        - "${HOST_PUB}:${NGINX_SERVER_IP}"

  php-7.2:
      container_name: php-7.2
      networks:
        backend:
#          ipv4_address: ${UPLOAD_SERVER_IP}
      build: ./php-7.2/
#      image: test-eshop-7.2:1.0
      expose:
        - 9000
      tty: true
      volumes:
        {{PROJECT_VOLUMES}}
      extra_hosts:
        - "${HOST_PUB}:${NGINX_SERVER_IP}"

  redis:
      container_name: redis
      networks:
          - backend
      image: redis:3.2
      ports:
          - "6379:6379"

# mysql
  mysql:
    container_name: mysql
    networks:
      - backend
    ports:
      - "3306:3306"
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_USER: test-again
      MYSQL_PASSWORD: test123456
    command: # mysqld --performance-schema-hosts-size=100
    command:
        - "mysqld"
        - "--performance-schema-hosts-size=100"
        - "--performance-schema-accounts-size=100"
        - "--max_allowed_packet=1024M"
        - "--performance_schema_max_cond_instances=1360"
        - "--performance_schema_max_file_instances=2500"
        - "--performance_schema_max_mutex_instances=5648"
        - "--performance_schema_max_rwlock_instances=3074"
        - "--performance_schema_max_socket_instances=230"
    volumes:
      - ./mysql/data:/var/lib/mysql

  mysql-8.0:
    container_name: mysql-8.0
    networks:
      - backend
    ports:
      - "3307:3306"
    build: mysql-8.0
#    image: mysql:8.0
#    command: mysqld --default-authentication-plugin=mysql_native_password
#    command: "mysqld --default-authentication-plugin=mysql_native_password"
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_USER: test-again
      MYSQL_PASSWORD: test123456
    command: mysqld --max_allowed_packet=1024M
    volumes:
#      - ./db/mysql-8.0/data:/var/lib/mysql
      - ./mysql/data-8.0:/var/lib/mysql

# phpmyadmin for mysql
  phpmyadmin_mysql:
    container_name: phpmyadmin
    networks:
      - frontend
      - backend
    image: phpmyadmin/phpmyadmin
    ports:
      - "8080:80"
    environment:
      PMA_HOST: mysql
  redis-exporter:
    container_name: redis_exporter_1
    image: oliver006/redis_exporter:alpine
    networks:
      - backend
    command: "-redis.addr=redis://redis:6379"
    expose:
      - "9121"
    ports:
      - "9121:9121"
  prometheus:
    image: prom/prometheus:v2.0.0
    container_name: prometheus_1
    networks:
      - backend
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - '9090:9090'
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - backend

  elasticsearch:
    image: elasticsearch:6.8.13
    expose:
      - 9200
      - 9300
    networks:
      - backend